"use strict";var e=require("yargs"),t=require("fs"),s=require("path"),i=require("node-watch"),r=require("chalk"),o=require("yargonaut");const n=t.promises;async function c(e,{ext:t,ignores:i=[],includes:r=[]},o,a=""){try{const l=s.resolve(e,a);if((await n.stat(l)).isDirectory()){const f=await n.readdir(l);for(const d of f){const f=s.resolve(l,d),g=await n.stat(f);if(g.isDirectory())i.map((t=>s.resolve(e,t))).includes(f)||(r&&r.length>0?r.map((t=>s.resolve(e,t))).includes(f)&&await c(e,{ext:t,ignores:i,includes:r},o,a?a+"/"+d:d):await c(e,{ext:t,ignores:i,includes:r},o,a?a+"/"+d:d));else if(g.isFile()){const e=s.parse(f).ext.substring(1);(!t||f.endsWith(`.${t}`)||t.split(",").includes(e))&&await o(f)}}}}catch(e){console.error(e)}}async function a(e){try{(await n.stat(e)).isDirectory()||await n.mkdir(e)}catch(t){await n.mkdir(e)}}var l={error:e=>{console.log(r.red(e))},success:e=>{console.log(r.green(e))},primary:e=>{console.log(r.blue(e))},info:e=>{console.log(r.grey(e))},log:e=>{console.log(e)},reg:e=>{const t=e.matchAll(/\$([^\$]*\$\#[0-9a-fA-F]{3,8})/);console.log(t)},dict:e=>{if("object"==typeof e)for(let t in e)console.log(`${r.blue(t)}: ${"string"==typeof e[t]?`'${e[t]}'`:e[t]}     `);else console.log(e)}};const f=t.promises;let d;async function g(e){const{watch:t,hot:r,ignores:o,includes:n,ext:p,rules:u,target:w,cssSplit:m}=e;l.primary("vnocss编译中......");const h=s.resolve(process.cwd(),w),v=s.parse(h);await a(v.dir);let y="";return await c(s.resolve(process.cwd(),t),{ext:p,ignores:o,includes:n},(async function(e){let i="";const r=(await f.readFile(e)).toString(),o=[...r.matchAll(/class="([^"]*)"/g),...r.matchAll(/class='([^']*)'/g)];let n=[];for(let e of o)n=[...new Set([...n,...e[1].trim().split(/\s+/)])];for(let e of n)for(let t in u){let s=u[t];const r=new RegExp(`^${t}$`);if(!r.test(e))continue;const o=e.match(r);let n="";if("string"==typeof s){const e=[...s.matchAll(/\$val\[(\d+)\]/g)];for(let t of e){const e=+t[1];s=s.replace(t[0],o[e])}n=`.${o[0]}{${s}}`}else"function"===s&&(n=`.${o[0]}{${s(o)}}`);i.indexOf(n)<0&&(i+=n),y.indexOf(n)<0&&(y+=n)}const c=s.parse(e);if(m&&i){const e=c.dir.replace(s.resolve(process.cwd(),t),""),r=s.resolve(v.dir,"."+e,c.name+"_css.css");await a(s.parse(r).dir),await f.writeFile(r,i)}})),y&&await f.writeFile(h,y),l.success("vnocss编译成功"),r&&function(e){const{watch:t,hot:r,ignores:o,includes:n,ext:c,rules:a,target:f,cssSplit:p}=e;d&&d.close(),d=i(s.resolve(process.cwd(),t),{recursive:!0,filter(e,t){if(Array.isArray(o))for(let s of o)if(new RegExp(`\\/${s}`).test(e))return t;if(Array.isArray(n)&&n.length>0){for(let t of n)if(new RegExp(`\\/${t}`).test(e)){let t=!1;for(let s of c.split(","))if(new RegExp(`\\.${s}`).test(e)){t=!0;break}return t}return t}let s=!1;for(let t of c.split(","))if(new RegExp(`\\.${t}`).test(e)){s=!0;break}return s}},(function(t,s){g(e)})),l.primary("监听文件中...")}(e),!0}var p={watch:"",hot:!0,ext:"html,vue",ignores:[],includes:[],target:"vnocss/vno.css",cssSplit:!1,rules:{}};const u=t.promises;o.help("3D-ASCII").helpStyle("green").style("blue"),e.command({command:"init",describe:"init your user space",builder:{dir:{alias:"dir",describe:"init config file paths",demand:!1,type:"string"}},async handler(e){const t=s.resolve(process.cwd(),e.dir||"","vno.config.js");let i=!1;try{(await u.stat(t)).isFile()&&(i=!0)}catch(e){}if(i)l.info("配置文件vno.config.js已存在，无需再次初始化");else{l.info("vno.config.js不存在，将创建初始配置");let e=s.resolve(__dirname,"../config/init.config.js");e="undefined"!=typeof require&&require.main===module?s.resolve(__dirname,"../config/init.config.cjs"):s.resolve(__dirname,"../config/init.config.mjs");const i=await u.readFile(e);await u.writeFile(t,i.toString())}}}).command({command:"start",describe:"start compile and watch html or other files! | 开始编译并监听文件变化！",builder:{config:{alias:"c",describe:"config file path, vno.config.json default | 指定配置文件,默认是vno.config.js",demand:!1,type:"string"},watch:{alias:"w",describe:"watched base directory path | 监听的文件夹路径，相对于根文件夹",demand:!1,type:"string"},target:{alias:"t",describe:"compile file target filepath | 生成的css文件存放路径",demand:!1,type:"string"},ext:{alias:"e",describe:"watched files ext | 要监听的文件拓展名，可用,分割",demand:!1,type:"string"},hot:{alias:"h",describe:"hot watch | 热更新",demand:!1,type:"string"}},async handler(e){const t=s.resolve(process.cwd(),e.config||"vno.config.js");try{await u.stat(t)}catch(e){return l.error("未找到配置文件，请先配置"),e}const i=await import(t),r={...p,...i.default};e.watch&&(r.watch=e.watch),e.target&&(r.target=e.target),e.ext&&(r.ext=e.ext),e.hot&&(r.hot=1==e.hot),l.success("配置加载成功，开始运行vnojs！"),g(r)}}).example("$0 init","init vno.config.js，初始化配置文件").example("$0 start -c v.config.js","start vno compile use v.config.js").example("$0 start","start vno compile use default config (vno.config.js)").wrap(null).argv;
